@page "/login"
@using AppDB.Models.DtoAndViewModels.AuthService.ViewModels
@using AppView.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject IApiService ApiService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@inject IToastService ToastService

<PageTitle>Đăng nhập</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white text-center">
                    <h4 class="mb-0">Đăng nhập</h4>
                </div>
                <div class="card-body">
                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="username" class="form-label">Tên đăng nhập</label>
                            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                            <ValidationMessage For="@(() => loginModel.Username)" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Mật khẩu</label>
                            <InputText type="password" id="password" class="form-control"
                                @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"
                                        aria-hidden="true"></span>
                                    <span>Đang đăng nhập...</span>
                                }
                                else
                                {
                                    <span>Đăng nhập</span>
                                }
                            </button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-3">
                        <p class="mb-0">Chưa có tài khoản? <a href="/register" class="text-decoration-none">Đăng ký
                                ngay</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginModel = new();
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        // Clear any existing user data when accessing login page
        await ApiService.ClearTokenAsync();
        await ApiService.ClearUserInfoAsync();
    }

    private async Task HandleLogin()
    {
        isLoading = true;

        try
        {
            var result = await ApiService.LoginAsync(loginModel);

            if (result.Success)
            {
                ToastService.ShowSuccess("Thành công", "Đăng nhập thành công! Đang chuyển hướng...");

                // Notify authentication state change
                if (AuthStateProvider is CustomAuthenticationStateProvider customProvider)
                {
                    customProvider.NotifyAuthenticationStateChanged();
                }

                // Delay to show toast before navigation
                await Task.Delay(1500);
                Navigation.NavigateTo("/");
            }
            else
            {
                ToastService.ShowError("Lỗi đăng nhập", result.Message ?? "Đăng nhập thất bại");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError("Lỗi", $"Lỗi kết nối: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
